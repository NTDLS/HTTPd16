///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include <Windows.H>
#include <Stdio.H>
#include <Stdlib.H>
#include <String.H>
#include <Winsock.H>
#include <DIRENT.H>
#include <ERRNO.H>
#include <IO.H>

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

bool IsDirectory(char *sPath)
{
	errno = 0;
	DIR *dir = opendir(sPath);
	bool bResult = (errno == 0);

    if(dir != NULL)
    {
	    closedir(dir);
    }

    return bResult;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void ListBox_Insert(HWND hWnd, const char *sInBuf)
{
    int index = SendMessage(hWnd, LB_GETCOUNT, 0, 0);
	SendMessage(hWnd, LB_INSERTSTRING, index, (LPARAM)sInBuf);

	while (index > 1000)
	{
		index = (int)SendMessage(hWnd, LB_GETCOUNT, 0, 0);
		SendMessage(hWnd, LB_DELETESTRING, 0, FALSE);
	}

	SendMessage(hWnd, LB_SETCURSEL, index, 0);
	SendMessage(hWnd, LB_SETCARETINDEX, index, FALSE);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void Set_Text(HWND hWnd, const char *sInBuf)
{
	SendMessage(hWnd, (UINT)WM_SETTEXT, (WPARAM)0, (LPARAM)sInBuf);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

int Get_TextLength(HWND hWnd)
{
	return GetWindowTextLength(hWnd);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

int Get_Text(HWND hWnd, char *sOutBuf, int iMaxSize)
{
	int iLen = GetWindowTextLength(hWnd);

	if (iLen >= iMaxSize)
	{
		return iLen;
	}

	iLen = GetWindowText(hWnd, sOutBuf, iMaxSize);

	sOutBuf[iLen] = '\0';

	return iLen;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

